@using MediatR
@using eShop.AdminApp.Application.Commands.UpdateCustomer
@using eShop.AdminApp.Application.Queries.GetCustomers
@using eShop.MasterData.Contracts
@inject IMasterDataApi MasterDataApi
@implements IDialogContentComponent<CustomerViewModel>

<FluentMessageBarProvider Section="MESSAGES_DIALOG" MaxMessageCount="1" />

<EditForm EditContext="@editContext" style="margin:10px">
    <DataAnnotationsValidator />
    <FluentStack Orientation="Orientation.Vertical">
        <div>
            <FluentTextField Name="firstName" @bind-Value="Content.FirstName" Label="First Name" Required Style="width:430px" />
            <FluentValidationMessage For="@(() => Content.FirstName)" />
        </div>
        <div>
            <FluentTextField Name="lastName" @bind-Value="Content.LastName" Label="Last Name" Required Style="width:430px" />
            <FluentValidationMessage For="@(() => Content.LastName)" />
        </div>
        <div>
            <FluentTextField Name="street" @bind-Value="Content.Street" Label="Street" Required Style="width:430px" />
            <FluentValidationMessage For="@(() => Content.Street)" />
        </div>
        <div>
            <FluentTextField Name="city" @bind-Value="Content.City" Label="City" Required Style="width:430px" />
            <FluentValidationMessage For="@(() => Content.City)" />
        </div>
        <div>
            <FluentTextField Name="state" @bind-Value="Content.State" Label="State" Required Style="width:430px" />
            <FluentValidationMessage For="@(() => Content.State)" />
        </div>
        <div>
            @* <FluentTextField Name="country" @bind-Value="Content.Country" Label="Country" Required Style="width:430px" /> *@
            @* <FluentSelect Items=@countries
                          TOption="CountryDto"
                          OptionText="@(_ => _.Name)"
                          OptionValue="@(_ => _.Code)"
                          @bind-Value="Content.Country"
                          Width="120px" /> *@
            <FluentValidationMessage For="@(() => Content.Country)" />
        </div>
        <div>
            <FluentTextField Name="zipCode" @bind-Value="Content.ZipCode" Label="Zip Code" Style="width:430px" Required />
            <FluentValidationMessage For="@(() => Content.ZipCode)" />
        </div>
    </FluentStack>
</EditForm>

@code {
    [Parameter]
    public CustomerViewModel Content { get; set; } = default!;

    [CascadingParameter]
    public FluentDialog? Dialog { get; set; }

    private EditContext editContext { get; set; } = null!;
    private ValidationMessageStore? messageStore;

    //private IEnumerable<CountryDto> countries = Array.Empty<CountryDto>();

    // protected override async Task OnInitializedAsync()
    // {
    //     this.countries = await MasterDataApi.GetCountries();
    // }

    protected override void OnParametersSet()
    {
        editContext = new EditContext(Content);
        editContext.OnFieldChanged += HandleFieldChanged;
        messageStore = new(editContext);
    }

    private bool fieldChangedBusy;

    private void HandleFieldChanged(object? sender, FieldChangedEventArgs e)
    {
        if (fieldChangedBusy)
        {
            return;
        }

        fieldChangedBusy = true;

        try
        {
            messageStore?.Clear(e.FieldIdentifier);
            editContext.NotifyValidationStateChanged();
        }
        finally
        {
            fieldChangedBusy = false;
        }
    }
}
